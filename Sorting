Selection Sort:
We select minimums
def selection(n,arr):
    for i in range(0,n-1):
        mini = i
        for j in range(i,n):
            if arr[j]<arr[mini]:
                mini = j
        arr[i],arr[mini]=arr[mini],arr[i]
    return arr
n = int(input())
arr = list(map(int,input().split()))
print(selection(n,arr))
The time complexity is o(n^2) for best,worst,average cases.

Bubble Sort:
Swap the maximum number to the last
def bubble(n,arr):
    for i in range(n-1,0,-1):
        for j in range(0,i):
            if arr[j]>arr[j+1]:
                arr[j],arr[j+1]=arr[j+1],arr[j]
    return arr
n = int(input())
arr = list(map(int,input().split()))
print(bubble(n,arr))
The time complexity is
best case - o(n)
worst,average case = o(n^2)

Insertion sort:
Take an element and place it in its current order
def insertion(n,arr):
    for i in range(0,n+1):
        j=i
        while(j>0 and (arr[j-1]>arr[j])):
            arr[j-1],arr[j] = arr[j],arr[j-1]
            j=j-1
    return arr
n = int(input())
arr = list(map(int,input().split()))
print(insertion(n,arr))
The time complexity is
best case - o(n)
worst,average case = o(n^2)
